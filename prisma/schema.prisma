// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int        @id @default(autoincrement())
  email     String     @unique
  password  String
  role      UserRole
  status    UserStatus @default(ACTIVE)
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  admin     Admin?
  vendor    Vendor?
  customer  Customer?

  @@map("users")
}

model Admin {
  id           Int      @id @default(autoincrement())
  email        String   @unique
  name         String
  profileImage String
  phone        String
  address      String
  isDeleted    Boolean  @default(false)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  user User @relation(fields: [email], references: [email])

  @@map("admins")
}

model Vendor {
  id            Int       @id @default(autoincrement())
  email         String    @unique
  name          String
  phone         String
  logo          String
  description   String
  location      String
  isBlacklisted Boolean   @default(false)
  isDeleted     Boolean   @default(false)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  user          User      @relation(fields: [email], references: [email])
  product       Product[]

  @@map("vendors")
}

model Customer {
  id           Int      @id @default(autoincrement())
  email        String   @unique
  name         String
  profileImage String
  phone        String
  address      String
  isDeleted    Boolean  @default(false)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  user User @relation(fields: [email], references: [email])

  @@map("customers")
}

model Category {
  id        Int       @id @default(autoincrement())
  name      String
  isDeleted Boolean   @default(false)
  product   Product[]

  @@map("categories")
}

model Product {
  id            Int      @id @default(autoincrement())
  name          String
  description   String
  categoryId    Int
  category      Category @relation(fields: [categoryId], references: [id])
  vendorId      Int
  vendor        Vendor   @relation(fields: [vendorId], references: [id])
  inventorCount Int
  images        String[]
  discount      Int
  price         Int
  isDeleted     Boolean  @default(false)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  @@map("products")
}

enum UserRole {
  ADMIN
  CUSTOMER
  VENDOR
}

enum UserStatus {
  PENDING
  ACTIVE
  BLOCKED
}
